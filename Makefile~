CC := g++
SRCDIR := classes
#TSTDIR := tests
OBJDIR := build
BINDIR := bin
CFLAGS := --coverage -g -std=c++11 -Wall -O3
INC := -I include/ 
MAIN := main.cpp
#TESTER := program/tester.cpp

SRCEXT := cpp
SOURCES := $(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
#OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
#TSTSOURCES := $(shell find $(TSTDIR) -type f -name *.$(SRCEXT))

OBJECTS := $($(SRCDIR):%.cpp=$(OBJDIR)/%.o)

# -g debug, --coverage para cobertura


$(OBJDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(@D)
	@$(CC) $(CFLAGS) $(INC) -c -o $@ $<

main: $(OBJECTS)
	@mkdir -p $(BINDIR)
	@$(CC) $(CFLAGS) $(INC) $(MAIN) $^ -o $(BINDIR)/main

#tests: $(OBJECTS)
#	@mkdir -p $(BINDIR)
#	$(CC) $(CFLAGS) $(INC) $(TESTER) $(TSTSOURCES) $^ -o $(BINDIR)/tester
#	$(BINDIR)/tester

all: main

coverage:
	@mkdir -p coverage/
	@gcov $(SOURCES) -l -p -o build/
	@lcov -c --no-external --directory . --output-file coverage/coverage.info
	@genhtml coverage/coverage.info --output-directory coverage/
	@$(RM) *.gcda *.gcno

clean:
	@$(RM) -r $(OBJDIR)/* $(BINDIR)/* coverage/* *.gcda *.gcno

.PHONY: clean coverage
